<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>EarthPy</title><link href="http://earthpy.org/" rel="alternate"></link><link href="http://earthpy.org/feeds/information.atom.xml" rel="self"></link><id>http://earthpy.org/</id><updated>2023-03-28T10:20:00+02:00</updated><entry><title>About EarthPy</title><link href="http://earthpy.org/first-post.html" rel="alternate"></link><updated>2023-03-28T10:20:00+02:00</updated><author><name>Nikolay Koldunov</name></author><id>tag:earthpy.org,2023-03-28:first-post.html</id><summary type="html">&lt;p&gt;EarthPy is a collection of &lt;a href="http://ipython.org/notebook.html"&gt;IPython notebooks&lt;/a&gt; with examples of Earth Science related Python code. It can be tutorials, descriptions of the modules, small scripts, or just tricks, that you think might be useful for others.&lt;/p&gt;
&lt;p&gt;Contributions are very welcome. To add your code to EarthPy, just send .ipynb file to koldunovn@gmail.com&lt;/p&gt;</summary><category term=""></category></entry><entry><title>Links</title><link href="http://earthpy.org/links.html" rel="alternate"></link><updated>2013-10-27T00:00:00+02:00</updated><author><name>Nikolay Koldunov</name></author><id>tag:earthpy.org,2013-10-27:links.html</id><summary type="html">&lt;p&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Here is small collection of links that I find useful.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Websites:"&gt;Websites:&lt;a class="anchor-link" href="#Websites:"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;

&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/jrjohansson/scientific-python-lectures#online-read-only-versions"&gt;Lectures on Scientific Computing with Python.&lt;/a&gt; - very good introduction to the topic writen as a collection of IPython Notebooks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks"&gt;A gallery of interesting IPython Notebooks&lt;/a&gt; - constant source of inspiration :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://oceanpython.org/"&gt;OceanPython.org&lt;/a&gt; - OceanPython.org is a website to learn Python Programming Language for ocean- and marine-science applications and to share Python code. OceanPython.org is maintained by students, staff and post-docs at the Department of Oceanography of Dalhousie University (Canada)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://earthpy.org/"&gt;EarthPy&lt;/a&gt; - EarthPy is a collection of IPython notebooks with examples of Earth Science related Python code. It can be tutorials, descriptions of the modules, small scripts, or just tricks, that you think might be useful for others.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://ocefpaf.github.io/"&gt;python4oceanographers&lt;/a&gt; - Learn python with examples applied to marine sciences.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://pyaos.johnny-lin.com/"&gt;Python for the Atmospheric and Oceanic Sciences&lt;/a&gt; - blog that show atmospheric and oceanic sciences (AOS) newcomers to Python what is available, and helps update experienced users as to the cutting-edge of using Python in AOS&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://mathesaurus.sourceforge.net/matlab-numpy.html"&gt;NumPy for MATLAB users&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.cfa.harvard.edu/~jbattat/computer/python/science/idl-numpy.html"&gt;Python NumPy for IDL users&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://www.astrobetter.com/idl-vs-python/"&gt;IDL vs. Python pros and cons discussion - astronomy&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://wiki.zmaw.de/lehre/PythonCourse"&gt;Python at KlimaCampus&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://wiki.zmaw.de/lehre/PythonCourse/PythonLES"&gt;LES python seminar series&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Books:"&gt;Books:&lt;a class="anchor-link" href="#Books:"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;

&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://www.springer.com/mathematics/computational+science+%26+engineering/book/978-3-540-73915-9"&gt;Python Scripting for Computational Science&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://www.packtpub.com/learning-ipython-for-interactive-computing-and-data-visualization/book"&gt;Learning IPython for Interactive Computing and Data Visualization&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.springer.com/engineering/signals/book/978-3-319-01341-1"&gt;Python for Signal Processing&lt;/a&gt; - This book covers the fundamental concepts in signal processing illustrated with Python code and made available via IPython Notebooks&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://www.johnny-lin.com/pyintro/"&gt;A Hands-On Introduction to Using Python in the Atmospheric and Oceanic Sciences&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://geosci.uchicago.edu/~rtp1/PrinciplesPlanetaryClimate/index.html"&gt;Principles of Planetary Climate&lt;/a&gt; - includes a large collection of Python examples&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://physics.nmt.edu/~raymond/software/python_notes/"&gt;Python for Science&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Modules:"&gt;Modules:&lt;a class="anchor-link" href="#Modules:"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;

&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://ferret.pmel.noaa.gov/Ferret/documentation/pyferret"&gt;pyFerret&lt;/a&gt; - PyFerret is a Python module wrapping Ferret. The pyferret module provides Python functions so Python users can easily take advantage of the Ferret's abilities to retrieve, manipulate, visualize, and save data. There are also functions to move data between Python and the Ferret engine. Python scripts used as Ferret external functions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://www.pyngl.ucar.edu/index.shtml"&gt;PyNGL&lt;/a&gt; - PyNGL is a Python language module used to visualize scientific data, with an emphasis on high quality 2D visualizations. Sort of interface to &lt;a href="http://www.ncl.ucar.edu/"&gt;NCL&lt;/a&gt; plotting functions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/ocefpaf/python-gsw"&gt;python-gsw&lt;/a&gt; - Python implementation of the Thermodynamic Equation Of Seawater - 2010 (TEOS-10)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/ocefpaf/python-seawater"&gt;python-seawater&lt;/a&gt; - Translated version of the matlab CSIRO seawater toolbox (EOS80)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/ocefpaf/python-ctd"&gt;python-ctd&lt;/a&gt; - Tools to load hydrographic data into pandas DataFrame (and some rudimentary methods for data pre-processing/analysis). This module can load SeaBird CTD (CNV), Sippican XBT (EDF), and Falmouth CTD (ASCII) formats.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/ocefpaf/python-oceans"&gt;python-oceans&lt;/a&gt; - various scripts and functions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://sourceforge.net/apps/mediawiki/tappy/index.php?title=Main_Page"&gt;TAPPY&lt;/a&gt; - a tidal analysis package.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://code.zmaw.de/projects/cdo/wiki/Cdo%7Brbpy%7D"&gt;python interface for CDO&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/pyresample/"&gt;pyresample&lt;/a&gt; - Resampling (reprojection) of geospatial image data in Python. Pyresample uses a kd-tree approach for resampling. Pyresample is designed for resampling of remote sensing data and supports resampling from both fixed grids and geolocated swath data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://people.su.se/~rcaba/climt/"&gt;CliMT: An object-oriented Climate Modeling and diagnostics Toolkit&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://proj.badc.rl.ac.uk/cedaservices/wiki/JASMIN/CommunityIntercomparisonSuite"&gt;jasmin-cis&lt;/a&gt; - This is a community effort to develop an automated model/data community intercomparison suite (CIS) within the JASMIN environment at the Centre for Environmental Data Archiving (CEDA) that will provide automated scientific analysis of heterogeneous datasets from models and observations.&lt;/p&gt;
&lt;/div&gt;&lt;/p&gt;</summary><category term="python for geosciences"></category></entry></feed>